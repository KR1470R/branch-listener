#!/bin/bash
LOG_FOLDER=$BRANCH_LISTENER_MAIN_DIR/logs
LOG_FILE=output.log

function log() {
    local message="$1"
    local save_to_logs="$2"
    if [ -z "$2" ]; then
        save_to_logs=true
    fi

    echo "$message"
    if [ "$save_to_logs" = true ]; then
        echo "$message" &>> "$LOG_FOLDER/$LOG_FILE" &
    fi
}

function start_listener {
    log "*** LISTENER LOGS ***"

    if ! [ -d "$BRANCH_LISTENER_MAIN_DIR" ]; then
        log "main dir($BRANCH_LISTENER_MAIN_DIR) not found! you need setup branch-listener properly!";
        exit 1;
    fi

    if ! [ -d "$BRANCH_LISTENER_MAIN_DIR/dist" ]; then
        log "src folder not found! Please build branch-listener.";
        exit 1;
    fi

    if ! [ -f "$LOG_FOLDER/$LOG_FILE" ]; then
        mkdir "$LOG_FOLDER";
        touch "$LOG_FOLDER/$LOG_FILE";
    fi

    local index_path="$BRANCH_LISTENER_MAIN_DIR/dist/src/index.js"
    nohup node "$index_path" &>> "$LOG_FOLDER/$LOG_FILE" &
}

function kill_listener {
    isLog=$1
    log "*** KILLING LISTENER LOGS ***" "$isLog"

    log "checking is listener alive..." "$isLog"
    if [ "$(lsof -t -i:3001 -sTCP:LISTEN)" ]; then
        kill -9 "$(lsof -t -i:3001 -sTCP:LISTEN)"
        log "listener has been killed" "$isLog"
    else 
        log "listener is not alive at 3001" "$isLog"
    fi 
}

function restart_listener {
    kill_listener 
    start_listener
}

function setup_listener {
    log "*** SETUP LISTENER LOGS ***"

    local setup_path="$BRANCH_LISTENER_MAIN_DIR/dist/src/setup.js"
    node "$setup_path"
}

function uninstall_listener {
    if [ -n "$BRANCH_LISTENER_SHELL_RC" ]; then
        echo "cannot find registered shell rc, trying to defind..."
        if echo "$SHELL" | grep -q 'zsh'; then
            BRANCH_LISTENER_SHELL_RC="$HOME/.zshrc"
        elif echo "$SHELL" | grep -q 'bash'; then
            BRANCH_LISTENER_SHELL_RC="$HOME/.bashrc"
        else 
            echo "unsupportable shell! exit"
            exit 1
        fi

        echo "defined $BRANCH_LISTENER_SHELL_RC"
    fi

    if  cat "$BRANCH_LISTENER_SHELL_RC" | grep -q "export BRANCH_LISTENER_SHELL_RC="; then
        sed -i "s|export BRANCH_LISTENER_SHELL_RC=$BRANCH_LISTENER_SHELL_RC||g" "$BRANCH_LISTENER_SHELL_RC"
    fi

    if cat "$BRANCH_LISTENER_SHELL_RC" | grep -q "export BRANCH_LISTENER_MAIN_DIR="; then
        sed -i "s|export BRANCH_LISTENER_MAIN_DIR=$BRANCH_LISTENER_MAIN_DIR||g" "$BRANCH_LISTENER_SHELL_RC"
    fi

    if cat "$BRANCH_LISTENER_SHELL_RC" | grep -q "branch-listener start"; then
        sed -i '/branch-listener start/d' "$BRANCH_LISTENER_SHELL_RC"
    fi

    if cat "$BRANCH_LISTENER_SHELL_RC" | grep -q 'export PATH=$PATH:'"$BRANCH_LISTENER_MAIN_DIR"; then
        sed -i -e "s|export PATH=\$PATH:$BRANCH_LISTENER_MAIN_DIR||g" "$BRANCH_LISTENER_SHELL_RC"
    fi

    rm -rf "$BRANCH_LISTENER_MAIN_DIR"

    unset BRANCH_LISTENER_MAIN_DIR
    unset BRANCH_LISTENER_SHELL_RC
    unset LOG_FOLDER
    unset LOG_FILE

    kill_listener false
}

function help_usage {
    log "Usage: branch-listener start | restart | kill | setup | uninstall | help"
    log '     start          Run listener on your port(default 3001)'
    log '     restart        Restart listener'
    log '     kill           Turn off listener'
    log '     setup          Configure configs of listener'
    log '     uninstall      Totally uninstall branch-listener'
    log '     help           Show this page'
    return 0
}

function narrowing() {
    parameter="$1"

    if [ "$parameter" = "start" ]; then
        start_listener
    elif [ "$parameter" = "restart" ]; then
        restart_listener
    elif [ "$parameter" = "kill" ]; then
        kill_listener
    elif [ "$parameter" = "setup" ]; then
        setup_listener
    elif [ "$parameter" = "uninstall" ]; then
        uninstall_listener
    elif [ "$parameter" = "help" ]; then
        help_usage
    else
        log "uknown parameter!"
        exit 1
    fi
}

narrowing "$1"
